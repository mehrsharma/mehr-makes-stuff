{"ast":null,"code":"var _jsxFileName = \"/Users/mehr/Desktop/newpersonalwebsite/src/pages/doodles.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { Container, Typography } from '@mui/material';\nimport { ThemeProvider } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { Colors } from '../components/styles-and-constants';\nimport { TypographyTheme } from '../components/styles-and-constants';\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport { UseWindowDimensions } from '../components/window-resize-handler';\nimport { GridLoader } from 'react-spinners';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction srcset(image, size) {\n  let rows = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  let cols = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  return {\n    src: `${image}?w=${size * cols}&h=${size * rows}&fit=crop&auto=format`,\n    srcSet: `${image}?w=${size * cols}&h=${size * rows}&fit=crop&auto=format&dpr=2 2x`\n  };\n}\nconst StyledImageListItem = styled(ImageListItem)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n_c = StyledImageListItem;\nexport default function Doodles() {\n  _s();\n  //   const [isLoading, setIsLoading] = useState(true);\n  const [defaultCol, setDefaultCol] = useState(true);\n  const [defaultRow, setDefaultRow] = useState(true);\n  const {\n    windowWidth\n  } = UseWindowDimensions();\n  useEffect(() => {\n    if (windowWidth < 550) {\n      setDefaultCol(false);\n      setDefaultRow(false);\n    } else {\n      setDefaultCol(true);\n      setDefaultRow(true);\n    }\n  }, [windowWidth]);\n  const [isLoading, setIsLoading] = useState(Array(itemData.length).fill(false));\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"div\",\n    sx: {\n      display: \"flex\",\n      justifyContent: \"left\",\n      backgroundColor: \"#FFFFFF\",\n      padding: \"20px\",\n      flexDirection: \"column\"\n    },\n    maxWidth: false,\n    id: \"doodles\",\n    children: [/*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: TypographyTheme,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        color: Colors.darkGrey,\n        children: \" doodles \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        color: Colors.darkGrey,\n        children: \" mediums include gel pen, digital (using notability), and acrylic paint.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageList, {\n      sx: {\n        paddingLeft: \"12%\",\n        paddingRight: \"12%\"\n      },\n      variant: \"quilted\",\n      cols: defaultCol ? 7 : 1,\n      children: itemData.map((item, index) => /*#__PURE__*/_jsxDEV(StyledImageListItem, {\n        cols: defaultCol ? item.cols : 1,\n        rows: defaultRow ? item.rows : 1,\n        children: [/*#__PURE__*/_jsxDEV(GridLoader, {\n          size: 15,\n          loading: isLoading[index]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), isLoading[index] ? null : /*#__PURE__*/_jsxDEV(\"img\", {\n          ...srcset(item.img, 121, item.rows, item.cols),\n          alt: item.title,\n          onLoad: () => setIsLoading(prev => {\n            prev[index] = false;\n            return prev;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, item.img, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Doodles, \"h6zzWYVDmRYI2i5L0TzDWkJwczc=\");\n_c2 = Doodles;\nconst itemData = [\n// first row\n{\n  img: 'walter.jpg',\n  title: 'Walter White',\n  rows: 2,\n  cols: 4\n}, {\n  img: 'walter_green.jpg',\n  title: 'Walter White - Green',\n  rows: 2,\n  cols: 3\n},\n// second row\n{\n  img: 'moby_dick.png',\n  title: 'fish1',\n  cols: 2,\n  rows: 2\n}, {\n  img: 'angel_man.jpeg',\n  title: 'Max',\n  cols: 3,\n  rows: 2\n}, {\n  img: 'moby_dick_white.png',\n  title: 'Max',\n  cols: 2,\n  rows: 1\n}, {\n  img: 'moby_dick_green.png',\n  title: 'Max',\n  cols: 2,\n  rows: 1\n},\n// third row\n{\n  img: 'bernie.jpeg',\n  title: 'Bernie Sanders With Mittens',\n  cols: 2,\n  rows: 2\n}, {\n  img: 'fisheye.jpg',\n  title: '5 Point Perspective Practice',\n  cols: 3,\n  rows: 2\n}, {\n  img: 'ribs.jpeg',\n  title: 'Ribs',\n  cols: 2,\n  rows: 2\n}, {\n  img: 'max2.jpg',\n  title: 'Max',\n  cols: 3,\n  rows: 1\n}, {\n  img: 'summer_stupid.jpeg',\n  title: 'Max',\n  cols: 3,\n  rows: 2\n}];\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledImageListItem\");\n$RefreshReg$(_c2, \"Doodles\");","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","ThemeProvider","styled","Colors","TypographyTheme","ImageList","ImageListItem","UseWindowDimensions","GridLoader","srcset","image","size","rows","cols","src","srcSet","StyledImageListItem","Doodles","defaultCol","setDefaultCol","defaultRow","setDefaultRow","windowWidth","isLoading","setIsLoading","Array","itemData","length","fill","display","justifyContent","backgroundColor","padding","flexDirection","darkGrey","paddingLeft","paddingRight","map","item","index","img","title","prev"],"sources":["/Users/mehr/Desktop/newpersonalwebsite/src/pages/doodles.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useEffect, useState, useRef } from 'react';\nimport { Box, Button, Container, Typography } from '@mui/material';\nimport { ThemeProvider } from '@emotion/react';\nimport styled from '@emotion/styled'\nimport { Colors } from '../components/styles-and-constants';\nimport { StyledButton, TypographyTheme } from '../components/styles-and-constants';\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport { UseWindowDimensions } from '../components/window-resize-handler';\nimport { GridLoader } from 'react-spinners';\nimport Tooltip, { TooltipProps, tooltipClasses } from '@mui/material/Tooltip';\n\n\nfunction srcset(image: string, size: number, rows = 1, cols = 1) {\n    return {\n      src: `${image}?w=${size * cols}&h=${size * rows}&fit=crop&auto=format`,\n      srcSet: `${image}?w=${size * cols}&h=${\n        size * rows\n      }&fit=crop&auto=format&dpr=2 2x`,\n    };\n  }\n\n  const StyledImageListItem = styled(ImageListItem)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default function Doodles() {\n//   const [isLoading, setIsLoading] = useState(true);\n  const [defaultCol, setDefaultCol] = useState(true);\n  const [defaultRow, setDefaultRow] = useState(true);\n  const { windowWidth } = UseWindowDimensions();\n  useEffect(()=> {\n    if(windowWidth < 550){\n      setDefaultCol(false);\n      setDefaultRow(false);\n    } else {\n      setDefaultCol(true);\n      setDefaultRow(true);\n    }\n  },[windowWidth])\n  const [isLoading, setIsLoading] = useState(\n    Array(itemData.length).fill(false)\n);\n  return (\n    <Container component=\"div\" sx={{ display: \"flex\", justifyContent: \"left\", backgroundColor: \"#FFFFFF\", padding: \"20px\", flexDirection: \"column\"}} maxWidth = {false} id=\"doodles\">\n      <ThemeProvider theme = {TypographyTheme}>\n        <Typography variant=\"h3\" color={Colors.darkGrey}> doodles </Typography>\n        <Typography variant=\"h4\" color={Colors.darkGrey}> mediums include gel pen, digital (using notability), and acrylic paint.</Typography>\n      </ThemeProvider>\n      <ImageList\n        sx={{ paddingLeft: \"12%\", paddingRight: \"12%\"}}\n        variant=\"quilted\"\n        cols={defaultCol ? 7 : 1}\n        >\n        {itemData.map((item, index) => (\n            <StyledImageListItem key={item.img} cols={defaultCol ? item.cols : 1} rows={defaultRow ? item.rows : 1} >\n            <GridLoader\n                    size={15}\n                    loading={isLoading[index]}\n                />\n            {isLoading[index] ? null : (\n                    <img\n                    {...srcset(item.img, 121, item.rows, item.cols)}\n                    alt={item.title}\n                    onLoad={() => setIsLoading(prev => {\n                        prev[index] = false;\n                        return prev;\n                    })}\n                />\n                )}\n            </StyledImageListItem>\n        ))}\n      </ImageList>\n    </Container>\n  );\n}\n\nconst itemData = [\n    // first row\n    {\n      img: 'walter.jpg',\n      title: 'Walter White',\n      rows: 2,\n      cols: 4,\n    },\n    {\n        img: 'walter_green.jpg',\n        title: 'Walter White - Green',\n        rows: 2,\n        cols: 3\n    },\n    // second row\n    {\n        img: 'moby_dick.png',\n        title: 'fish1',\n        cols: 2,\n        rows: 2\n    },  \n    {\n        img: 'angel_man.jpeg',\n        title: 'Max',\n        cols: 3,\n        rows: 2\n    },\n    {\n        img: 'moby_dick_white.png',\n        title: 'Max',\n        cols: 2,\n        rows: 1\n    },\n    {\n        img: 'moby_dick_green.png',\n        title: 'Max',\n        cols: 2,\n        rows: 1\n    },\n    // third row\n    {\n        img: 'bernie.jpeg',\n        title: 'Bernie Sanders With Mittens',\n        cols: 2,\n        rows: 2\n    },\n    {\n        img: 'fisheye.jpg',\n        title: '5 Point Perspective Practice',\n        cols: 3,\n        rows: 2\n    },\n    {\n        img: 'ribs.jpeg',\n        title: 'Ribs',\n        cols: 2,\n        rows: 2\n    },\n    {\n        img: 'max2.jpg',\n        title: 'Max',\n        cols: 3,\n        rows: 1\n    },\n\n\n    {\n        img: 'summer_stupid.jpeg',\n        title: 'Max',\n        cols: 3,\n        rows: 2\n    },\n\n  ];\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}